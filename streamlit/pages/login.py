# ITMO-ML-Services/streamlit/pages/login.py
import streamlit as st
from loguru import logger

from utils.auth import login
from utils.api import register

st.set_page_config(
    page_title="Login - ML Classification", page_icon="üîë", layout="centered"
)

logger.debug("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
st.title("Login")

# Tabs for login and registration
tab1, tab2 = st.tabs(["Login", "Register"])

with tab1:
    logger.debug("–û—Ç–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ –≤—Ö–æ–¥–∞.")
    with st.form("login_form"):
        email = st.text_input("Email")
        password = st.text_input("Password", type="password")
        submit = st.form_submit_button("Log In")

    if submit:
        logger.info(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞. Email: {email}")
        if email and password:
            with st.spinner("Logging in..."):
                logger.debug("–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API...")
                if login(email, password):
                    logger.success(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {email} —É—Å–ø–µ—à–Ω–æ –≤–æ—à—ë–ª –≤ —Å–∏—Å—Ç–µ–º—É.")
                    st.success("Login successful!")
                    st.switch_page("app.py")
                else:
                    logger.warning(f"–ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {email}")
                    st.error("Invalid credentials. Please try again.")
        else:
            logger.warning("–û–¥–Ω–æ –∏–ª–∏ –æ–±–∞ –ø–æ–ª—è (email, –ø–∞—Ä–æ–ª—å) –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")
            st.warning("Please enter both email and password.")

with tab2:
    logger.debug("–û—Ç–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    with st.form("register_form"):
        new_email = st.text_input("Email")
        new_full_name = st.text_input("Full Name")
        new_password = st.text_input("Password", type="password")
        confirm_password = st.text_input("Confirm Password", type="password")
        register_button = st.form_submit_button("Register")

    if register_button:
        logger.info(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. Email: {new_email}")
        if new_email and new_full_name and new_password:
            if new_password != confirm_password:
                logger.warning("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
                st.error("Passwords do not match!")
            else:
                with st.spinner("Registering..."):
                    logger.debug("–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ API...")
                    result = register(new_email, new_password, new_full_name)
                    if result:
                        logger.success(
                            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_email} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω."
                        )
                        st.success("Registration successful! Please log in.")
                    else:
                        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {new_email}")
                        st.error(
                            "Registration failed. Please try a different email or check your connection."
                        )
        else:
            logger.warning("–ù–µ –≤—Å–µ –ø–æ–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.")
            st.warning("Please fill out all fields.")
