# ITMO-ML-Services/streamlit/pages/balance.py
import streamlit as st
from loguru import logger
from utils.auth import check_login
from utils.api import get_user_balance, add_funds

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Ö–æ–¥–∞
logger.debug("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
check_login()
logger.debug("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.")

st.set_page_config(page_title="Account Balance", page_icon="üí∞", layout="wide")

logger.info("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
st.title("Account Balance")

# Get current balance
logger.debug("–ó–∞–ø—Ä–æ—Å —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
balance_info = get_user_balance()

if balance_info:
    # Display current balance
    balance = balance_info.get("balance", 0)
    currency = balance_info.get("currency", "USD")
    last_updated = balance_info.get("last_updated", "N/A")

    logger.info(
        f"–ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ: {balance} {currency}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {last_updated}"
    )
    st.metric("Current Balance", f"{balance} {currency}")
    st.write(f"Last updated: {last_updated}")

    # Add funds section
    st.subheader("Add Funds")
    st.write("Use this form to add funds to your account.")

    with st.form("add_funds_form"):
        amount = st.number_input(
            "Amount to add", min_value=5.0, max_value=1000.0, value=10.0, step=5.0
        )
        payment_method = st.selectbox("Payment Method", ["Credit Card", "Demo"])
        submit = st.form_submit_button("Add Funds")

    if submit:
        # In a real app, this would redirect to a payment gateway
        # For this demo, we'll just call the API directly
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {amount} {currency}")
        with st.spinner("Processing payment..."):
            logger.debug(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: {amount}")
            result = add_funds(amount)

            if result:
                logger.success(f"–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount} {currency}")
                st.success(f"Successfully added {amount} {currency} to your account!")
                st.info("Please refresh to see your updated balance.")
                if st.button("Refresh Balance"):
                    logger.debug("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–æ—Å–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–∞–ª–∞–Ω—Å–∞")
                    st.rerun()
            else:
                logger.error("–û—à–∏–±–∫–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞")
                st.error("Failed to add funds. Please try again later.")

    # Transaction history would go here in a real application
    st.subheader("Transaction History")
    st.info("Transaction history feature is coming soon.")

else:
    logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    st.error("Failed to retrieve balance information. Please try again later.")
